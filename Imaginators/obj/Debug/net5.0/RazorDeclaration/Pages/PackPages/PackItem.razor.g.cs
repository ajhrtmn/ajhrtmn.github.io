// <auto-generated/>
#pragma warning disable 1591
#pragma warning disable 0414
#pragma warning disable 0649
#pragma warning disable 0169

namespace Imaginators.Pages.PackPages
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Components;
#nullable restore
#line 1 "/Volumes/Wall Screen/Imaginators Assets/Code/Imaginators/_Imports.razor"
using System.Net.Http;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "/Volumes/Wall Screen/Imaginators Assets/Code/Imaginators/_Imports.razor"
using Microsoft.AspNetCore.Authorization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "/Volumes/Wall Screen/Imaginators Assets/Code/Imaginators/_Imports.razor"
using Microsoft.AspNetCore.Components.Authorization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "/Volumes/Wall Screen/Imaginators Assets/Code/Imaginators/_Imports.razor"
using Microsoft.AspNetCore.Components.Forms;

#line default
#line hidden
#nullable disable
#nullable restore
#line 5 "/Volumes/Wall Screen/Imaginators Assets/Code/Imaginators/_Imports.razor"
using Microsoft.AspNetCore.Components.Routing;

#line default
#line hidden
#nullable disable
#nullable restore
#line 6 "/Volumes/Wall Screen/Imaginators Assets/Code/Imaginators/_Imports.razor"
using Microsoft.AspNetCore.Components.Web;

#line default
#line hidden
#nullable disable
#nullable restore
#line 7 "/Volumes/Wall Screen/Imaginators Assets/Code/Imaginators/_Imports.razor"
using Microsoft.JSInterop;

#line default
#line hidden
#nullable disable
#nullable restore
#line 8 "/Volumes/Wall Screen/Imaginators Assets/Code/Imaginators/_Imports.razor"
using Imaginators;

#line default
#line hidden
#nullable disable
#nullable restore
#line 9 "/Volumes/Wall Screen/Imaginators Assets/Code/Imaginators/_Imports.razor"
using Imaginators.GameObjects;

#line default
#line hidden
#nullable disable
#nullable restore
#line 10 "/Volumes/Wall Screen/Imaginators Assets/Code/Imaginators/_Imports.razor"
using Imaginators.Shared;

#line default
#line hidden
#nullable disable
#nullable restore
#line 11 "/Volumes/Wall Screen/Imaginators Assets/Code/Imaginators/_Imports.razor"
using Imaginators.Pages.SkillsPages;

#line default
#line hidden
#nullable disable
#nullable restore
#line 12 "/Volumes/Wall Screen/Imaginators Assets/Code/Imaginators/_Imports.razor"
using Imaginators.Pages.HUDPages;

#line default
#line hidden
#nullable disable
#nullable restore
#line 13 "/Volumes/Wall Screen/Imaginators Assets/Code/Imaginators/_Imports.razor"
using Imaginators.Pages.ZonePages;

#line default
#line hidden
#nullable disable
#nullable restore
#line 14 "/Volumes/Wall Screen/Imaginators Assets/Code/Imaginators/_Imports.razor"
using Imaginators.Pages.PopoverPages;

#line default
#line hidden
#nullable disable
#nullable restore
#line 15 "/Volumes/Wall Screen/Imaginators Assets/Code/Imaginators/_Imports.razor"
using Imaginators.Pages.UIPages;

#line default
#line hidden
#nullable disable
#nullable restore
#line 16 "/Volumes/Wall Screen/Imaginators Assets/Code/Imaginators/_Imports.razor"
using Imaginators.Pages.QuestPages;

#line default
#line hidden
#nullable disable
#nullable restore
#line 17 "/Volumes/Wall Screen/Imaginators Assets/Code/Imaginators/_Imports.razor"
using Imaginators.Pages.MapPages;

#line default
#line hidden
#nullable disable
#nullable restore
#line 18 "/Volumes/Wall Screen/Imaginators Assets/Code/Imaginators/_Imports.razor"
using Imaginators.Pages.PackPages;

#line default
#line hidden
#nullable disable
#nullable restore
#line 19 "/Volumes/Wall Screen/Imaginators Assets/Code/Imaginators/_Imports.razor"
using Imaginators.Pages.CombatPages;

#line default
#line hidden
#nullable disable
#nullable restore
#line 20 "/Volumes/Wall Screen/Imaginators Assets/Code/Imaginators/_Imports.razor"
using Imaginators.Pages.ItemsPages;

#line default
#line hidden
#nullable disable
    public partial class PackItem : Microsoft.AspNetCore.Components.ComponentBase
    {
        #pragma warning disable 1998
        protected override void BuildRenderTree(Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder __builder)
        {
        }
        #pragma warning restore 1998
#nullable restore
#line 7 "/Volumes/Wall Screen/Imaginators Assets/Code/Imaginators/Pages/PackPages/PackItem.razor"
       

    [Parameter] public double W { get; set; }
    [Parameter] public double H { get; set; }
    [Parameter] public double ID { get; set; }
    [Parameter] public string ListType { get; set; }
    [Parameter] public IList<Item> Items { get; set; }

    private string rotated = "";

    private Item item = new Item();
    private string w = "H4";
    private string h = "H2";

    private bool is_moving = false;

    protected override void OnAfterRender(bool firstRender)
    {
        if (firstRender)
        {
            item.Width = W;
            item.Height = H;
            item.ID = ID;
            item.X = 2;
            item.Y = 2;
            item_x = item.X;
            item_y = item.Y;
            ListType = "pack";
            item.Anchor_Row = 1;
            item.Anchor_Col = 1;
            SetWH();
        }
    }

    private void RotateItem(MouseEventArgs e)
    {
        item.Rotate(e);
        SetWH();
        rotated = ( item.Rotated == true ) ? " rotated" : "";
    }


    private double msx;
    private double msy;
    private double item_x;
    private double item_y;

    private double ogx;
    private double ogy;

    private void TriggerMove(MouseEventArgs e)
    {
        ogx = item_x;
        ogy = item_y;
        is_moving = true;
        msx = e.ClientX;
        msy= e.ClientY;
    }

    private void MoveItem(MouseEventArgs e)
    {
        if ( is_moving != false )
        {   
            item_x += e.ClientX - msx;
            msx = e.ClientX;

            item_y += e.ClientY - msy;
            msy = e.ClientY;
            
            Console.WriteLine(item_x);
            Console.WriteLine(item_y);
        }
    }

    private void EndMove(MouseEventArgs e)
    {
        if ( is_moving == true )
        {
            item.X = item_x;
            item.Y = item_y;
            if ( item_x < 2 ) { item_x = 2; }
            if ( item_y < 2 ) { item_y = 2; }
            if ( item_y > 512 ) { item_y = 512; }

            SetPos();
        }

        is_moving = false;
    }

    private void SetPos()
    {
        foreach ( Item i in Items )
        {
            var check_01 = false;
            var check_02 = false;
            var check_03 = false;
            var check_04 = false;
            var check_05 = false;
            var check_06 = false;

            check_01 = ( item_x < i.X + GetPoint( "r", i.Width ) ) ? true : false;
            check_02 = ( item_x + GetPoint( "r", W ) > i.X ) ? true : false;

            check_03 = ( item_y < i.Y + GetPoint("c", i.Height) ) ? true : false;
            check_04 = ( item_y + GetPoint( "c", H ) > i.Y ) ? true : false;

            check_05 = ( item_x + GetPoint( "r", W ) > 600 ) ? true : false;
            check_06 = ( item_y + GetPoint( "c", H ) > 512 ) ? true : false;

            if ( check_01 == true && check_02 == true && check_03 == true && check_04 == true ) { item_x = ogx; item_y = ogy; }
            else { LockPos( item.X, item.Y ); }
        }
    }

    private double GetPoint(string rc, double c)
    {
        var m = 0;
        switch ( c )
        {
            case 1: if ( rc == "r" ) { m = 27; } else { m = 26; } break;
            case 2: if ( rc == "r" ) { m = 58; } else { m = 56; } break;
            case 3: if ( rc == "r" ) { m = 88; } else { m = 86; } break;
            case 4: if ( rc == "r" ) { m = 119; } else { m = 116; } break;
            case 5: if ( rc == "r" ) { m = 150; } else { m = 146; } break;
            case 6: if ( rc == "r" ) { m = 181; } else { m = 176; } break;
            case 7: if ( rc == "r" ) { m = 211; } else { m = 206; } break;
            case 8: if ( rc == "r" ) { m = 242; } else { m = 236; } break;
        }
        return m;
    }

    private void LockPos( double tx, double ty )
    {
        var row_01 = 2; var row_02 = 32; var row_03 = 64;
        var row_04 = 95; var row_05 = 126; var row_06 = 156;
        var row_07 = 187; var row_08 = 218; var row_09 = 249;
        var row_10 = 279; var row_11 = 310; var row_12 = 341;
        var row_13 = 372; var row_14 = 402; var row_15 = 433;
        var row_16 = 464; var row_17 = 494; var row_18 = 525;

        var col_01 = 2; var col_02 = 32; var col_03 = 62;
        var col_04 = 92; var col_05 = 122; var col_06 = 152;
        var col_07 = 182; var col_08 = 212; var col_09 = 242;
        var col_10 = 272; var col_11 = 302; var col_12 = 332;
        var col_13 = 362; var col_14 = 392; var col_15 = 422;
        var col_16 = 452; var col_17 = 482; var col_18 = 512;

        if ( tx >= row_01 ) { item_x = row_01; item.Anchor_Row = 1; }
        if ( tx >= row_02 ) { item_x = row_02; item.Anchor_Row = 2; }
        if ( tx >= row_03 ) { item_x = row_03; item.Anchor_Row = 3; }
        if ( tx >= row_04 ) { item_x = row_04; item.Anchor_Row = 4; }
        if ( tx >= row_05 ) { item_x = row_05; item.Anchor_Row = 5; }
        if ( tx >= row_06 ) { item_x = row_06; item.Anchor_Row = 6; }
        if ( tx >= row_07 ) { item_x = row_07; item.Anchor_Row = 7; }
        if ( tx >= row_08 ) { item_x = row_08; item.Anchor_Row = 8; }
        if ( tx >= row_09 ) { item_x = row_09; item.Anchor_Row = 9; }
        if ( tx >= row_10 ) { item_x = row_10; item.Anchor_Row = 10; }
        if ( tx >= row_11 ) { item_x = row_11; item.Anchor_Row = 11; }
        if ( tx >= row_12 ) { item_x = row_12; item.Anchor_Row = 12; }
        if ( tx >= row_13 ) { item_x = row_13; item.Anchor_Row = 13; }
        if ( tx >= row_14 ) { item_x = row_14; item.Anchor_Row = 14; }
        if ( tx >= row_15 ) { item_x = row_15; item.Anchor_Row = 15; }
        if ( tx >= row_16 ) { item_x = row_16; item.Anchor_Row = 16; }
        if ( tx >= row_17 ) { item_x = row_17; item.Anchor_Row = 17; }
        if ( tx >= row_18 ) { item_x = row_18; item.Anchor_Row = 18; }

        if ( ty >= col_01 ) { item_y = col_01; item.Anchor_Col = 1; }
        if ( ty >= col_02 ) { item_y = col_02; item.Anchor_Col = 2; }
        if ( ty >= col_03 ) { item_y = col_03; item.Anchor_Col = 3; }
        if ( ty >= col_04 ) { item_y = col_04; item.Anchor_Col = 4; }
        if ( ty >= col_05 ) { item_y = col_05; item.Anchor_Col = 5; }
        if ( ty >= col_06 ) { item_y = col_06; item.Anchor_Col = 6; }
        if ( ty >= col_07 ) { item_y = col_07; item.Anchor_Col = 7; }
        if ( ty >= col_08 ) { item_y = col_08; item.Anchor_Col = 8; }
        if ( ty >= col_09 ) { item_y = col_09; item.Anchor_Col = 9; }
        if ( ty >= col_10 ) { item_y = col_10; item.Anchor_Col = 10; }
        if ( ty >= col_11 ) { item_y = col_11; item.Anchor_Col = 11; }
        if ( ty >= col_12 ) { item_y = col_12; item.Anchor_Col = 12; }
        if ( ty >= col_13 ) { item_y = col_13; item.Anchor_Col = 13; }
        if ( ty >= col_14 ) { item_y = col_14; item.Anchor_Col = 14; }
        if ( ty >= col_15 ) { item_y = col_15; item.Anchor_Col = 15; }
        if ( ty >= col_16 ) { item_y = col_16; item.Anchor_Col = 16; }
        if ( ty >= col_17 ) { item_y = col_17; item.Anchor_Col = 17; }
        if ( ty >= col_18 ) { item_y = col_18; item.Anchor_Col = 18; }

    }




    private void SetWH()
    {
        switch ( item.Width )
        {
            case 1: w = "W1"; break;
            case 2: w = "W2"; break;
            case 3: w = "W3"; break;
            case 4: w = "W4"; break;
            case 5: w = "W5"; break;
            case 6: w = "W6"; break;
            case 7: w = "W7"; break;
            case 8: w = "W8"; break;
        }
        
        switch ( item.Height )
        {
            case 1: h = "H1"; break;
            case 2: h = "H2"; break;
            case 3: h = "H3"; break;
            case 4: h = "H4"; break;
            case 5: h = "H5"; break;
            case 6: h = "H6"; break;
            case 7: h = "H7"; break;
            case 8: h = "H8"; break;
        }
    }


#line default
#line hidden
#nullable disable
    }
}
#pragma warning restore 1591
